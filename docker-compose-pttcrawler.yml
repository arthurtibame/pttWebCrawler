version: '3'
services:
  crawler_jupyter:
    build:
      context: .
      dockerfile: dockerfile-jupyter
    container_name: crawler_jupyter
    restart: always
    ports:
      - "9527:8888"
      - "80:5000"
      - "5001:5001"
    volumes:
      - ./material:/home/jovyan/work
    command: start-notebook.sh --NotebookApp.token='howdoyouturnthison8888'
    environment:
      - "GRANT_SUDO: yes"

  db:
    image: mysql:5.7
    container_name: crawler_db
    restart: always
    environment:
      MYSQL_DATABASE: 'PTTDB'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'pttuser1'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'howdoyouturnthison3306'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3307'
      # Where our data will be persisted
    volumes:
      - ./mysql-dump:/docker-entrypoint-initdb.d
      - ./my-db:/var/lib/mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # localhost may need to be modified
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # Following line is needed for Kafka versions 0.11+
      # in case you run less than 3 Kafka brokers in your
      # cluster because the broker config
      # `offsets.topic.replication.factor` (default: 3)
      # is now enforced upon topic creation
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

# Names the volume
volumes:
  my-db:
